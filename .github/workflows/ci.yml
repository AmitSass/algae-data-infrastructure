name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

env:
  PYTHON_VERSION: '3.12'

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install lint & security tools
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0 flake8==7.1.1 isort==5.13.2 bandit==1.7.5 safety==3.2.0
      
      - name: Run linting
        run: |
          flake8 algae_lib/ scripts/ orchestration/airflow/ || true
          black --check algae_lib/ scripts/ orchestration/airflow/ || true
          isort --check-only algae_lib/ scripts/ orchestration/airflow/ || true
      
      - name: Run security scan
        run: |
          bandit -r algae_lib/ scripts/ orchestration/airflow/ || true
          safety check || true

  dbt-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core==1.7.19 dbt-postgres==1.7.19
          cd transform/dbt
          dbt deps || true
      
      - name: Set up environment variables
        run: |
          {
            echo "PGHOST=localhost"
            echo "PGPORT=5432"
            echo "PGDATABASE=test_db"
            echo "PGUSER=postgres"
            echo "PGPASSWORD=postgres"
          } >> $GITHUB_ENV
      
      - name: Run dbt debug
        run: |
          cd transform/dbt
          dbt debug --profiles-dir . --profile baralgae_demo || true
      
      - name: Run dbt compile
        run: |
          cd transform/dbt
          dbt compile --profiles-dir . --profile baralgae_demo || true
      
      - name: Run dbt test
        run: |
          cd transform/dbt
          dbt test --profiles-dir . --profile baralgae_demo || true

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker images
        run: |
          docker compose build || true
      
      - name: Test Docker images
        run: |
          docker compose up -d || true
          sleep 30
          docker compose ps || true
          docker compose down || true
