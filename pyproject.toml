[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "algae-data-infrastructure"
version = "1.0.0"
description = "A comprehensive Data Engineering and Analytics platform for microalgae cultivation operations"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Amit Sasson", email = "amit.sass@baralgae.com"}
]
maintainers = [
    {name = "Amit Sasson", email = "amit.sass@baralgae.com"}
]
keywords = [
    "data-engineering",
    "airflow",
    "dbt",
    "great-expectations",
    "microalgae",
    "analytics",
    "machine-learning"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Information Analysis"
]
requires-python = ">=3.13"
dependencies = [
    "apache-airflow>=2.10.3",
    "dbt-core>=1.7.19",
    "dbt-postgres>=1.7.19",
    "great-expectations>=0.17.0",
    "pandas>=2.2.2",
    "numpy>=1.26.4",
    "pyarrow>=18.1.0",
    "openpyxl>=3.1.3",
    "psycopg2-binary>=2.9.10",
    "sqlalchemy>=1.4.54",
    "boto3>=1.34.77",
    "botocore>=1.34.162",
    "scikit-learn>=1.4.0",
    "xgboost>=2.0.3",
    "python-dotenv>=1.0.1",
    "pendulum>=3.0.0",
    "requests>=2.31.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "black>=24.8.0",
    "flake8>=7.1.1",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "semgrep>=1.45.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
    "mkdocs-mermaid2-plugin>=1.1.1",
    "coverage>=7.4.0",
    "tox>=4.11.4",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.9",
    "ipykernel>=6.28.0",
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3"
]

[project.urls]
Homepage = "https://github.com/AmitSass/algae-data-infrastructure"
Documentation = "https://github.com/AmitSass/algae-data-infrastructure#readme"
Repository = "https://github.com/AmitSass/algae-data-infrastructure.git"
Issues = "https://github.com/AmitSass/algae-data-infrastructure/issues"
Changelog = "https://github.com/AmitSass/algae-data-infrastructure/blob/main/CHANGELOG.md"

[project.scripts]
algae-seed = "scripts.seed_demo_data:main"
algae-dbt = "scripts.run_dbt:main"
algae-ge = "scripts.run_great_expectations:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["algae_lib*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.sql", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["algae_lib", "scripts"]
known_third_party = ["pandas", "numpy", "boto3", "sqlalchemy"]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg"
]

# MyPy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests", "orchestration/airflow/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["algae_lib", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

# Safety configuration
[tool.safety]
output = "json"
